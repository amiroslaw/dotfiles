" https://github.com/JetBrains/ideavim
" https://gist.github.com/zchee/9c78f91cc5ad771c1f5d actions
" sometimes noremap doesn't work
" advices method of mapping but noremap doesn't work
" map <leader>d <action>(ShowErrorDescription)
" :source ~/.ideavimrc
" DON'T put a comment in the end of the keybinging
" , for git
" - for run
"   TODO

" Diff.NextChange                                    <M-S-]> <C-Right>
" Diff.PrevChange                                    <M-S-[> <C-Left>
" Diff.ShowDiff                                      <M-D>
" DirDiffMenu.SetCopyToLeft                         
" DirDiffMenu.SetCopyToRight                        
" NextTab
" PreviousTab                                        <M-S-[> <C-Left>
" NextEditorTab                                      <C-S-Right>
" mam ale zmienić an coś bardziej dostępnego
"QuickJavaDoc - Quick Documentation (not only for java, all languages)
" ShowErrorDescription - Show description of the error under the caret (cursor hovering)


" SETS
" https://github.com/JetBrains/ideavim/wiki/%22set%22-commands
" maybe space 
let mapleader = ";" 
" let maplocalleader=" "
set hlsearch
set ignorecase
set smartcase
set visualbell
set history=1000
set clipboard=unnamed
set clipboard+=ideaput
set ideawrite=all
set scrolloff=5 
set ideastatusicon=gray
set idearefactormode=select
"keep  - keep the mode that was enabled before starting a refactoring
set ideajoin
" set ideajoin=true
" https://github.com/JetBrains/ideavim/wiki/%60ideajoin%60-examples
" set relativenumber


" # -------------------------------------------------------------------------
" #                       PLUGINS
" set exchange - interesting
" Additional motions / text objects:
"   s - Surround. Ex: cis" = change inside surrounding quotes
"   a - Argument. Ex: cia = change inner (function) argument
"   e - Entire bufer. ex: dae = delete all buffer (content)
"   cs'" - change ' to "
"   S" in visual mode
" Additional commands:
"   gc<motion> - Comment. Ex: gcc = comment line
"   gr<motion> - ReplaceWithRegister. Ex: grr = replace line with unnamed register
"   cx<motion> - Exchange/Transpose. Ex: cxiw, (move to other word), . = swap two words. Also: cxc, X
"   <A-n>, <A-x>, <A-p>, g<A-n> - Multiple cursors.
" # -------------------------------------------------------------------------
set NERDTree
map <leader>N :NERDTreeToggle<cr>
map <leader>n <Action>(SelectInProjectView)
let g:NERDTreeMapActivateNode='l'
let g:NERDTreeMapJumpParent='h'
" j/k; J/K; c-j/k; c-p/n moving 
" x -close; go - open without losing focus; s-split
" navigation, open close tree

" visual select and then S, conflict with yssb
" TODO IDK if easymotion Overrides `s`
set surround            
" SurroundWith menu from livetemplates
vnoremap <leader>s :action SurroundWith<cr>
nnoremap <leader>s :action SurroundWith<cr>  
" gcc, gc + motion, v_gc
set commentary			
" <A + n> , <A + x>, <A + a> 
set multiple-cursors    
" set vim-highlightedyank
Plug 'machakann/vim-highlightedyank'
let g:highlightedyank_highlight_duration = 1000

" copy something and griw or grr (works with visual mode)
set ReplaceWithRegister
" text object for argumentst; daa - delete, caa - edit
set argtextobj
" let g:argtextobj_pairs="[:],(:),<:>"
" Easy Motion
" all actions only make visual mode selection
set easymotion
let g:EasyMotion_smartcase = 1
let g:EasyMotion_override_acejump = 0
nmap s <Plug>(easymotion-f)
nmap S <Plug>(easymotion-F)
nmap f <Plug>(easymotion-j)
nmap F <Plug>(easymotion-k)
nmap <leader>t <Plug>(easymotion-eol-j)
nmap <leader>T <Plug>(easymotion-eol-k)
" t and s is used?
" map <leader>T <Plug>(easymotion-b)
" map <leader>t <Plug>(easymotion-w)
" map <nowait> s <Plug>(easymotion-j)
nmap <leader>. <Plug>(easymotion-repeat)

" VIM MAPS
nmap <F1> :source ~/.config/ideavim/ideavimrc<cr>
inoremap <C-a> <C-o>b
inoremap <C-d> <C-o>w
nnoremap <Space> <C-d><cr> 

" # -------------------------------------------------------------------------
" #                       GOTO and JUMP
" # -------------------------------------------------------------------------
" problem with selection and s 
" nnoremap s <Nop>
" Perhaps just use the Idea shortcut Ctrl-Alt-B
" Alt + N, then m (through the menu bar) also seems to work, but it is non-unique.
nnoremap gd :action GotoDeclaration<CR>
" method in interface
nnoremap gm :action GotoSuperMethod<CR> 
nnoremap gi :action GotoImplementation<CR>
" similar to c-a-7
nnoremap gu :action ShowUsages<CR>	
" in new window
nnoremap gU :action FindUsages<CR> 

nmap gf :action GotoFile<cr>
nmap gj :action GotoClass<cr>
nmap gs :action GotoSymbol<cr>
nmap ga :action GotoAction<cr>

noremap gy        :action GotoTypeDeclaration<CR>
noremap gt        :action GotoTest<CR>

" built-in navigation to navigated items works better than c-o
nnoremap <c-o> :action Back<cr>
nnoremap <c-i> :action Forward<cr>
nmap gl :action RecentLocations<cr>
"like c-o in vim don't work?
nnoremap gL :action JumpToLastChange<CR> 
noremap gr  :action RecentChangedFiles<CR>

nnoremap <leader>l :action HighlightUsagesInFile<cr>
nnoremap <c-n> :action GotoNextElementUnderCaretUsage<cr>
" nnoremap <leader>n :action NextOccurence<cr>
" Error F2
map <a-s> <Action>(GotoNextError)
nmap <a-s-s> :action GotoPreviousError<cr>

nnoremap gh :action FileStructurePopup<CR> 
map <C-h> :action TypeHierarchy<CR>
" noremap <Leader>ic :action CallHierarchy<CR>
" noremap <Leader>im :action MethodHierarchy<CR>

" more like search c-s-f
vnoremap <c-s> :action FindInPath<CR> 
nnoremap <c-s> :action FindInPath<CR> 

" # -------------------------------------------------------------------------
" #                       code navigation
" # -------------------------------------------------------------------------
" Moving lines or code block
nnoremap <c-a-k> :action MoveLineUp<cr>
nnoremap <c-a-j> :action MoveLineDown<cr>
inoremap <c-a-j> <Esc>:m +1<CR>gi
inoremap <c-a-k> <Esc>:m -2<CR>gi

nmap <s-a-k> :action MoveStatementUp<cr>
nmap <s-a-j> :action MoveStatementDown<cr>

nnoremap <A-k> :action MethodUp<cr>
inoremap <A-k> :action MethodUp<cr>
nnoremap <A-j> :action MethodDown<cr>
inoremap <A-j> :action MethodDown<cr>

" # -------------------------------------------------------------------------
" #                       tabs, panes and bookmarks
" better not to bind to TAB
" # -------------------------------------------------------------------------
nnoremap <A-h> :action PrevSplitter<cr>
inoremap <A-h> :action PrevSplitter<cr>
nnoremap <A-l> :action NextSplitter<cr>
inoremap <A-l> :action NextSplitter<cr>
" nmap ] :action NextTab<cr>
" nmap [ :action PreviousTab <cr>
nmap <c-h> :action PreviousTab <cr>
nmap <c-l> :action NextTab<cr>
" nmap <c-h> :action ActivateNextWindow<cr>
" nmap <c-s-h> :action PreviousTab <cr>
" nmap <c-s-l> :action NextTab<cr>

nma mp :action GotoPreviousBookmark<cr>
nma mn :action GotoNextBookmark<cr>
nma ml :action ShowBookmarks<cr>
nma mm :action ToggleBookmark<cr>

nmap U :action ReopenClosedTab<cr>
nmap ZZ :action CloseContent<cr>

" # -------------------------------------------------------------------------
" #                       Refactorings -generate
" # -------------------------------------------------------------------------
vmap T :action Refactorings.QuickListPopupAction<cr>
nmap T :action Refactorings.QuickListPopupAction<cr>
noremap tr :action RefactoringMenu<CR>
" Shift + F6 in idea.  Alt + R, then R (through the menu bar) also seems to work fine.
nmap tt :action RenameElement<cr>
nmap ti :action OptimizeImports<cr>
nmap tg :action Generate<cr>

nmap tm :action ExtractMethod<cr>
vmap tm :action ExtractMethod<cr>
nmap tc :action IntroduceConstant<cr>
nmap tf :action IntroduceField<cr>
nmap tp :action IntroduceParameter<cr>
nmap tv :action IntroduceVariable<cr>
nmap td :action MemberPushDown<cr>
nmap tu :action MembersPullUp<cr>
noremap tl :action Inline<CR>
noremap to :action Move<CR>
nmap <leader>r :action Replace<cr>
noremap tA :action AnalyzeMenu<CR>
nmap ta :action InspectCode<cr>
nnoremap <leader>c :action RearrangeCode<cr>
" nnoremap <leader>c :CodeCleanup<cr>
" OptimizeImports
" nmap tp :action IntroduceFunctionalParameter<cr>
" nmap tm :action IntroduceParameterObject<cr>

" # -------------------------------------------------------------------------
" #                       VCS operations and git
" # -------------------------------------------------------------------------
"maybe better keys
nnoremap gn :action VcsShowNextChangeMarker<cr> 
nnoremap gp :action VcsShowPrevChangeMarker<cr>
nmap ,y :action Vcs.Show.Local.Changes<cr>                          
nmap ,, :action Vcs.QuickListPopupAction<cr>
" nmap ,b :action Vcs.UpdateProject<cr>
nmap ,f :action Git.Fetch<cr>
nmap ,u :action Git.Pull<cr>
nmap ,s :action Git.Stash<cr>
nmap ,S :action Git.Unstash<cr>
nmap ,r :action Git.Rebase<cr>
nmap ,m :action Git.Merge<cr>
nmap ,p :action Vcs.Push<cr>
nmap ,t :action Git.Tag<cr>
nmap ,b :action Git.Branches<cr>
nmap ,a :action Annotate<cr>
nmap ,l :action Vcs.Show.Log<cr>
" history and Compare 
nmap ,vs :action Compare.Selected<cr>
nmap ,vv :action Compare.SameVersion<cr>
nmap ,vl :action Compare.LastVersion<cr>
" nie wiem jak compare with branch
noremap ,vc  :action RecentChanges<CR>

nmap ,L :action Vcs.ShowTabbedFileHistory<cr>
nmap ,M :action Git.Menu<cr>
" nmap ,b :action Vcs.Checkout<cr>
nmap ,c :action Git.CheckoutRevision<cr>
nmap ,k :action ChangesView.Commit<cr>

" LocalHistory
nmap ,h :action LocalHistory.ShowHistory<cr>
nmap ,H :action LocalHistory.ShowSelectionHistory<cr>
" VcsToobarActions                                  
" nmap <leader>yr :action Git.ResolveConflicts<cr>                          

"  Building, Running and Debugging {{{
map -- <action>(Run)
map -r <action>(ChooseRunConfiguration)
" 2x ctrl
map -a <action>(RunAnything)
" it's c-s-f10 - also for run class
map -c <action>(RunClass)
map -t <action>(RerunFailedTests)
map -T <action>(RerunTests)
map -d <action>(Debug)
map -D <action>(DebugClass)
map <leader>b <Action>(ToggleLineBreakpoint)
nmap -j :action JShell.Console<cr>
" nmap ,c :action CompileDirty<cr> " }}} 

" # -------------------------------------------------------------------------
" #                       Definitions
" # -------------------------------------------------------------------------
" TODO maybe remap
nmap <leader>dd <action>(QuickImplementations)
nmap <leader>de <action>(ShowErrorDescription)
nmap <leader>di <action>(QuickTypeDefinition)
nmap <leader>dj <action>(QuickJavaDoc)
noremap <Leader>dp :action ParameterInfo<CR>
noremap <Leader>da :action QuickActions<CR> 

"folds
" zo 	open current fold
" zO 	recursively open current fold
" zC 	recursively close current fold
" zc 	close current fold
" ExpandAllToLevel1                                  
" don't work
nmap zm :action CollapseAll<cr>
nmap zr :action ExpandAll<cr>


nnoremap <leader>/ :nohlsearch<cr>

" Hide All Tool Windows  fullscreen editor c-s-F12
nnoremap <leader>e :action HideAllWindows<cr>
nmap <leader>m :action Maven.Reimport <cr>
" Maven.ReimportProject → jest jeszcze 
" External GVim - trzeba ustawić w externa tools w ide na termite -e nvim lub jakiś klient nvim
" prefix Tools
nmap <leader>v :action Tool_External Tools_nvim-qt<cr>

" vim: foldmethod=marker


" {{{ vim settings
" # -------------------------------------------------------------------------
" #                       Override intellij keybingings
" ~/.config/JetBrains/IntelliJIdea2021.2/options/vim_settings.xml
" # -------------------------------------------------------------------------
sethandler <c-;> a:vim
sethandler <c-a> a:vim
"TODO change in ide to IDE
" sethandler <c-c> a:vim
sethandler <c-d> a:vim
sethandler <c-g> a:vim
sethandler <c-h> a:vim
sethandler <c-i> a:vim
sethandler <c-l> a:vim
sethandler <c-n> a:vim
sethandler <c-r> a:vim
sethandler <c-s> a:vim
sethandler <c-t> a:vim
sethandler <c-u> a:vim
sethandler <c-w> a:vim
sethandler <c-y> a:vim
sethandler <c-s-;> a:vim
sethandler <c-a-k> a:vim
sethandler <c-a-j> a:vim
sethandler <s-a-j> a:vim " }}} 


" MAYBE LATER
"
" uppercase last inserted word - c-s-u do the same
" imap <C-l> <Esc>bgUawea 
" GitFileActions, GitRepositoryActions, Git.ResolveConflicts)

" NOT NEEDED
" shift shift
" nnoremap ge :action SearchEverywhere<CR> 
" inoremap ge :action SearchEverywhere<CR> 
" c-e don't work but I have RecentChangedFiles
" nmap gr :action RecentFiles<cr>

" test
 " a-cr
" noremap <CR>      :action ShowIntentionActions<CR>

" TODO
" zobaczyć jakie rzeczy nie są dostępne w ideavim i zbindować kilka rzeczy do tego 
" zgrupowane akcji - jak dla gita; dla refactoringu, dla czegośtam
" zobaczyć moje mappingi z vimrc/init
"
" przydałoby się zbindować:
" java class diagram/ bena spring ee
" What if I want to use visual mode during refactoring? 
" Select mode is controlled by the keymodel and selectmode options. Remove template from the selectmode option to adjust this behavior.
" set selectmode-=template
" quick documentation - z ide c-q
" ADD 
" import 
" max editor
" refactor this
" inline var - dodanie go do parametru
" shell - open terminal 
" parameter info
"

" vim: foldmethod=marker

