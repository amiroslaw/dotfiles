snippet sw "switch"
	local switch = (function(name,args)
		local sw = {
			["${1:opiton1}"] = $0,
			["${2:opiton2}"] = ,
			["${3:opiton3}"] = ,
			["#default"] = 
		}
		return (sw[name]and{sw[name]}or{sw["#default"]})[1](args)
	end)

snippet exe "execute shell cmd"
	local status = os.execute($1)
	$0

snippet ass "Assertion" b
	assert(${1:condition}`!p
	if t[2]:
		snip.rv = ", "
	else:
		snip.rv = ""
	`${2:msg})

snippet #!
	#!/usr/bin/env lua
	$1
snippet #!jit
	#!/usr/bin/env jitlua
	$1
snippet local
	local ${1:x} = ${0:1}
snippet fun
	function ${1:fname}(${2:...})
		$0
	end
snippet for
	for ${1:i}=${2:1},${3:10} do
		${0:print(i)}
	end
snippet forp
	for ${1:i},${2:v} in pairs(${3:table_name}) do
		$0
	end
snippet fori
	for ${1:i},${2:v} in ipairs(${3:table_name}) do
		$0
	end
snippet if
	if $1 then
		$2
	end
snippet ife
	if $1 then
		${2:-- if condition}
	else
		${0:-- else}
	end
snippet elif
	elseif $1 then
		$0
snippet ife3 "if/elseif/else statement" b
	if $1 then
		$2
	elseif $3 then
		$4
	else
		$0
	end
snippet repeat
	repeat
		$1
	until $0
snippet while
	while $1 do
		$0
	end
snippet wh
	while ${1:true} do
		${0}
	end
snippet wht
	while true do
		${0}
	end
snippet sout "print" b
	print(${1:$CLIPBOARD})
snippet print
	print(${1:$CLIPBOARD})
snippet prf
	print(string.format("${1:%s}"$0))
snippet wr
	io.write($0)
snippet wrs
	io.write("$0")
snippet wrf
	io.write(string.format("${1:%s}"$0))
snippet fwr
	io.${1:stderr}:write($0)
snippet fwrs
	io.${1:stderr}:write("$0")
snippet fwrf
	io.${1:stderr}:write(string.format("${2:%s}"$0))
snippet req
	require('${1:mod}')
