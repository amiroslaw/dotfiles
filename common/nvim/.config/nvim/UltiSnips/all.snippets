# This file contains snippets that are always defined. I personally
# have snippets for signatures and often needed texts

# sligthly lower priority than everything else since specialized versions
# should overwrite. The user needs to adjust her priority in her snippets to
# ~-55 so that other filetypes will still overwrite.
priority -60

##############
# NICE BOXES #
##############
global !p
LOREM = """
Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod \
tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At \
vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, \
no sea takimata sanctus est Lorem ipsum dolor sit amet.
"""
endglobal

##########################
# LOREM IPSUM GENERATORS #
##########################
snippet "lorem" "Lorem Ipsum" r
`!p snip.rv = LOREM`
endsnippet

#########
# DATES #
#########
snippet date "YYYY-MM-DD" w
`!v strftime("%Y-%m-%d")`
endsnippet

snippet diso "ISO format datetime" w
`!v strftime("%Y-%m-%d %H:%M:%S%z")`
endsnippet

snippet time "hh:mm" w
`!v strftime("%H:%M")`
endsnippet

snippet datetime "YYYY-MM-DD hh:mm" w
`!v strftime("%Y-%m-%d %H:%M")`
endsnippet

snippet filename "filename" b
`!v bufname('%') ==#'[Command Line]' ? expand('#') : expand('%')`${0}
endsnippet

# doesn't work
snippet todo "TODO comment" bw
`!p snip.rv=` ${2:TODO}: $0${3: <${4:`!v strftime('%d-%m-%y')`}${5:, `!v g:snips_author`}>} ``
endsnippet


snippet comlua "comment for lua" b
-- -------------------------------------------------------------------------
--                       ${1:`xclip -o -sel clip`}
-- -------------------------------------------------------------------------
$0
endsnippet

snippet comment "comment for bash" b
# -------------------------------------------------------------------------
#                       ${1:`xclip -o -sel clip`}
# -------------------------------------------------------------------------
$0
endsnippet

snippet fold "nvim fold comment" b
"{{{ $1
${2:`xclip -o -sel clip`} " }}} 
$0
endsnippet

snippet foldbash "nvim fold comment hash" b
#{{{ $1
${2:`xclip -o -sel clip`} # }}} 
$0
endsnippet

snippet foldlua "nvim fold comment for lua" b
--{{{ $1
${2:`xclip -o -sel clip`} -- }}} 
$0
endsnippet

snippet foldset "vim fold setting" b
# vim: foldmethod=marker
$0
endsnippet

# vim:ft=snippets:
# vim: foldmethod=marker


