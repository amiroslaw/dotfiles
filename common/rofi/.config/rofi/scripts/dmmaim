#!/usr/bin/env bash
#
# Script name: dmscrot
# Description: Choose type of screenshot to take with maim.
# Dependencies: dmenu, maim, tee, xdotool, xclip
# GitLab: https://www.gitlab.com/dwt1/dmscripts
# License: https://www.gitlab.com/dwt1/dmscripts/LICENSE
# Contributors: Derek Taylor
#               Simon Ingelsson

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.
set -euo pipefail

# Specifying a directory to save our screenshots.
SCROTDIR="$HOME/Pictures"
# Makes sure the directory exists.
mkdir -p "${SCROTDIR}"

# FIX: STAMP will be set to the time when this script was executed and not when the actual screenshot is taken
STAMP=$(date '+%m-%d-%H%M%S')

MAIM_ARGS=""
MAIM_FILE=""

# Get monitors and their settings for maim
DISPLAYS=$(xrandr --listactivemonitors | grep '+' | awk '{print $4, $3}' | awk -F'[x/+* ]' '{print $1,$2"x"$4"+"$6"+"$7}')

# What modes do we have
declare -a modes=(
"Fullscreen"
"Active window"
"Active window quality"
"Selected region"
)

# Add monitor data 
IFS=$'\n'
declare -A DISP
for i in ${DISPLAYS}; do 
  name=$(echo ${i}|awk '{print $1}')
  rest="$(echo ${i}|awk '{print $2}')"
  modes[${#modes[@]}]="${name}"
  DISP[${name}]="${rest}"
done
unset IFS

target=$(printf '%s\n' "${modes[@]}" | dmenu -i -l 20 -p 'Take screenshot of:') || exit 1
case "$target" in
  'Multimonitors')
    MAIM_ARGS=""
    MAIM_FILE="${SCROTDIR}/${STAMP}_Asc.png"
  ;;
  'Active window')
    active_window=$(xdotool getactivewindow)
    MAIM_ARGS="-i ${active_window}"
    MAIM_FILE="${SCROTDIR}/${STAMP}_sc.png"
  ;;
  'Active window quality')
    active_window=$(xdotool getactivewindow)
    MAIM_ARGS="-i ${active_window} -m 2"
    MAIM_FILE="${SCROTDIR}/${STAMP}_Qsc.png"
  ;;
  'Selected region')
    MAIM_ARGS="-s"
    MAIM_FILE="${SCROTDIR}/${STAMP}_Ssc.png"
  ;;
  *)
    MAIM_ARGS="-g ${DISP[${target}]}"
    MAIM_FILE="${SCROTDIR}/${STAMP}_Fsc.png"
  ;;
esac

declare -a destination=( "File" "Clipboard" "Both" )
dest=$(printf '%s\n' "${destination[@]}" | dmenu -i -l 20 -p 'Destination:') || exit 1
case "$dest" in
  'File')
    maim ${MAIM_ARGS} "${MAIM_FILE}"
	notify-send "Screenshot saved - $target"
    echo $?
  ;;
  'Clipboard')
    maim ${MAIM_ARGS} | xclip -selection clipboard -t image/png
	notify-send "Screenshot in clipboard - $target"
  ;;
  'Both')
    maim ${MAIM_ARGS} | tee "${MAIM_FILE}" | xclip -selection clipboard -t image/png
  ;;
  *)
    exit 1
  ;;
esac

exit 0
